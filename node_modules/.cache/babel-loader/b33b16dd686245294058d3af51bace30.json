{"ast":null,"code":"var _jsxFileName = \"/Users/mohammadalighaliany/barfas/react/bb/src/App.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar raw = \"{\\n    \\\"phone\\\": \\\"9367893533\\\",\\n    \\\"password\\\" : \\\"a1234567\\\"\\n}\";\nvar requestOptions = {\n  method: 'POST',\n  body: raw,\n  redirect: 'follow'\n};\n\nclass MyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      YourToken: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://foodzila.iran.liara.run/users/api?login\", requestOptions).then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        YourToken: result.YourToken\n      });\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      YourToken\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 14\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: YourToken\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport default MyComponent;","map":{"version":3,"sources":["/Users/mohammadalighaliany/barfas/react/bb/src/App.js"],"names":["React","Component","raw","requestOptions","method","body","redirect","MyComponent","constructor","props","state","error","isLoaded","YourToken","componentDidMount","fetch","then","res","json","result","setState","render","message"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;;AACA,IAAIC,GAAG,GAAG,uEAAV;AAEA,IAAIC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,MADW;AAEnBC,EAAAA,IAAI,EAAEH,GAFa;AAGnBI,EAAAA,QAAQ,EAAE;AAHS,CAArB;;AAMA,MAAMC,WAAN,SAA0BP,KAAK,CAACC,SAAhC,CAA0C;AACxCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,SAAS,EAAE;AAHA,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAGlBC,IAAAA,KAAK,CAAC,iDAAD,EAAmDZ,cAAnD,CAAL,CACGa,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACV,WAAKC,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,SAAS,EAAEM,MAAM,CAACN;AAFN,OAAd;AAID,KARL,EASI;AACA;AACA;AACCF,IAAAA,KAAD,IAAW;AACT,WAAKS,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA;AAFY,OAAd;AAID,KAjBL;AAmBD;;AAEDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEV,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAAiC,KAAKH,KAA5C;;AACA,QAAIC,KAAJ,EAAW;AACT,0BAAO;AAAA,8BAAaA,KAAK,CAACW,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO,IAAI,CAACV,QAAL,EAAe;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,MAEA;AACL,0BACE;AAAA,kBACGC;AADH;AAAA;AAAA;AAAA;AAAA,cADF;AAMD;AACF;;AAhDuC;;AAoD1C,eAAeN,WAAf","sourcesContent":["import React,{Component} from \"react\";\nvar raw = \"{\\n    \\\"phone\\\": \\\"9367893533\\\",\\n    \\\"password\\\" : \\\"a1234567\\\"\\n}\";\n\nvar requestOptions = {\n  method: 'POST',\n  body: raw,\n  redirect: 'follow'\n};\n\nclass MyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      YourToken: []\n    };\n  }\n\n  componentDidMount() {\n\n\n    fetch(\"https://foodzila.iran.liara.run/users/api?login\",requestOptions)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            YourToken: result.YourToken\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  render() {\n    const { error, isLoaded, YourToken } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <ul>\n          {YourToken}\n\n        </ul>\n      );\n    }\n  }\n}\n\n\nexport default MyComponent;\n"]},"metadata":{},"sourceType":"module"}