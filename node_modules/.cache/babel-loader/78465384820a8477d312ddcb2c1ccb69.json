{"ast":null,"code":"var _jsxFileName = \"/Users/mohammadalighaliany/barfas/react/bb/src/App.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar myHeaders = new Headers();\nmyHeaders.append(\"Content-Type\", \"application/json\");\nsetTimeout(function () {\n  window.location.reload(true);\n}, 5000);\n\nclass MyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      ans: []\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(function () {\n      fetch(\"https://api.binance.com/api/v3/ticker/24hr\").then(res => res.json()).then(result => {\n        this.setState({\n          isLoaded: true,\n          ans: result[0].priceChangePercent\n        });\n      }, // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      error => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      });\n    }, 3000);\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      ans\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 14\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: ans\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport default MyComponent;","map":{"version":3,"sources":["/Users/mohammadalighaliany/barfas/react/bb/src/App.js"],"names":["React","Component","myHeaders","Headers","append","setTimeout","window","location","reload","MyComponent","constructor","props","state","error","isLoaded","ans","componentDidMount","fetch","then","res","json","result","setState","priceChangePercent","render","message"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;;AACA,IAAIC,SAAS,GAAG,IAAIC,OAAJ,EAAhB;AACAD,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AACAC,UAAU,CAAC,YAAU;AACnBC,EAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,IAAvB;AACD,CAFS,EAER,IAFQ,CAAV;;AAIA,MAAMC,WAAN,SAA0BT,KAAK,CAACC,SAAhC,CAA0C;AACxCS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,GAAG,EAAE;AAHM,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AACtBX,IAAAA,UAAU,CAAC,YAAU;AACnBY,MAAAA,KAAK,CAAC,4CAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAGOG,MAAD,IAAY;AACV,aAAKC,QAAL,CAAc;AACZR,UAAAA,QAAQ,EAAE,IADE;AAEZC,UAAAA,GAAG,EAAEM,MAAM,CAAC,CAAD,CAAN,CAAUE;AAFH,SAAd;AAID,OARP,EASM;AACA;AACA;AACCV,MAAAA,KAAD,IAAW;AACT,aAAKS,QAAL,CAAc;AACZR,UAAAA,QAAQ,EAAE,IADE;AAEZD,UAAAA;AAFY,SAAd;AAID,OAjBP;AAoBD,KArBS,EAqBR,IArBQ,CAAV;AAwBG;;AAEDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEX,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAA2B,KAAKH,KAAtC;;AACA,QAAIC,KAAJ,EAAW;AACT,0BAAO;AAAA,8BAAaA,KAAK,CAACY,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO,IAAI,CAACX,QAAL,EAAe;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,MAEA;AACL,0BACE;AAAA,kBACGC;AADH;AAAA;AAAA;AAAA;AAAA,cADF;AAMD;AACF;;AAnDuC;;AAuD1C,eAAeN,WAAf","sourcesContent":["import React,{Component} from \"react\";\nvar myHeaders = new Headers();\nmyHeaders.append(\"Content-Type\", \"application/json\");\nsetTimeout(function(){\n  window.location.reload(true);\n},5000)\n\nclass MyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      ans: []\n    };\n  }\n\n  componentDidMount() {\nsetTimeout(function(){\n  fetch(\"https://api.binance.com/api/v3/ticker/24hr\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            ans: result[0].priceChangePercent\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n\n},3000)\n\n     \n  }\n\n  render() {\n    const { error, isLoaded, ans } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div></div>;\n    } else {\n      return (\n        <ul>\n          {ans}\n\n        </ul>\n      );\n    }\n  }\n}\n\n\nexport default MyComponent;\n"]},"metadata":{},"sourceType":"module"}